---
import Navigation from '../components/Header/Navigation.astro';
import Footer from '../components/Footer/Footer.astro';

export interface Props {
  title: string;
  description?: string;
}

const { title, description = "Professional Portfolio and Blog for Software Engineer and Product Manager" } = Astro.props;
---

<!DOCTYPE html>
<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="description" content={description} />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <link rel="icon" type="image/svg+xml" href="/favicon.svg" />
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Cairo:wght@300;400;500;600;700&family=Hind:wght@300;400;500;600;700&family=Maitree:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <title>{title} | shupp.dev</title>
  </head>
  <body>
    <Navigation />
    <button id="darkModeToggle" class="theme-toggle">
      <span id="themeIcon" class="theme-icon"></span>
      <div class="bokeh-glow"></div>
    </button>
    <main>
      <slot />
    </main>
    <Footer />
    <script type="module">
      // Dark mode toggle logic (defaulting to dark mode)
      document.addEventListener('DOMContentLoaded', () => {
        const toggle = document.getElementById('darkModeToggle');
        const iconContainer = document.getElementById('themeIcon');
        const html = document.documentElement;
        
        // Default to dark mode unless explicitly set to light
        if (localStorage.getItem('theme') !== 'light') {
          html.classList.add('dark');
        }
        
        if (toggle && iconContainer) {
          const updateIcon = () => {
            const isDark = html.classList.contains('dark');
            // Clean, centered SVG icons with subtle animations
            iconContainer.innerHTML = isDark 
              ? `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" style="display: block;">
                  <defs>
                    <linearGradient id="sunGradient" x1="0%" y1="0%" x2="100%" y2="100%">
                      <stop offset="0%" style="stop-color:#FBBF24;stop-opacity:1" />
                      <stop offset="50%" style="stop-color:#FCD34D;stop-opacity:1" />
                      <stop offset="100%" style="stop-color:#E9EB9E;stop-opacity:1" />
                    </linearGradient>
                    <filter id="sunBokeh">
                      <feGaussianBlur in="SourceGraphic" stdDeviation="0.5"/>
                      <feComponentTransfer result="bokeh">
                        <feFuncA type="discrete" tableValues="0 1 1 1"/>
                      </feComponentTransfer>
                      <feGaussianBlur in="bokeh" stdDeviation="1" result="bokeh2"/>
                      <feMerge>
                        <feMergeNode in="bokeh2"/>
                        <feMergeNode in="SourceGraphic"/>
                      </feMerge>
                    </filter>
                  </defs>
                  <!-- Sun core -->
                  <circle cx="12" cy="12" r="5" fill="url(#sunGradient)" opacity="0.95">
                    <animate attributeName="r" values="5;5.2;5" dur="3s" repeatCount="indefinite"/>
                  </circle>
                  <!-- Bokeh glow -->
                  <circle cx="12" cy="12" r="7" fill="url(#sunGradient)" opacity="0.3" filter="url(#sunBokeh)"/>
                  <!-- Rays -->
                  <g stroke="url(#sunGradient)" stroke-width="2" stroke-linecap="round" opacity="0.9">
                    <line x1="12" y1="1" x2="12" y2="3"><animate attributeName="opacity" values="0.7;1;0.7" dur="3s" repeatCount="indefinite"/></line>
                    <line x1="12" y1="21" x2="12" y2="23"><animate attributeName="opacity" values="0.7;1;0.7" dur="3s" begin="0.4s" repeatCount="indefinite"/></line>
                    <line x1="4.22" y1="4.22" x2="5.64" y2="5.64"><animate attributeName="opacity" values="0.7;1;0.7" dur="3s" begin="0.8s" repeatCount="indefinite"/></line>
                    <line x1="18.36" y1="18.36" x2="19.78" y2="19.78"><animate attributeName="opacity" values="0.7;1;0.7" dur="3s" begin="1.2s" repeatCount="indefinite"/></line>
                    <line x1="1" y1="12" x2="3" y2="12"><animate attributeName="opacity" values="0.7;1;0.7" dur="3s" begin="1.6s" repeatCount="indefinite"/></line>
                    <line x1="21" y1="12" x2="23" y2="12"><animate attributeName="opacity" values="0.7;1;0.7" dur="3s" begin="2s" repeatCount="indefinite"/></line>
                    <line x1="4.22" y1="19.78" x2="5.64" y2="18.36"><animate attributeName="opacity" values="0.7;1;0.7" dur="3s" begin="2.4s" repeatCount="indefinite"/></line>
                    <line x1="18.36" y1="5.64" x2="19.78" y2="4.22"><animate attributeName="opacity" values="0.7;1;0.7" dur="3s" begin="2.8s" repeatCount="indefinite"/></line>
                  </g>
                </svg>`
              : `<svg width="24" height="24" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg" style="display: block;">
                  <defs>
                    <linearGradient id="moonGradient" x1="0%" y1="0%" x2="100%" y2="100%">
                      <stop offset="0%" style="stop-color:#49475B;stop-opacity:1" />
                      <stop offset="50%" style="stop-color:#5D5B6E;stop-opacity:1" />
                      <stop offset="100%" style="stop-color:#799496;stop-opacity:1" />
                    </linearGradient>
                    <filter id="moonBokeh">
                      <feGaussianBlur in="SourceGraphic" stdDeviation="0.8" result="blur1"/>
                      <feGaussianBlur in="SourceGraphic" stdDeviation="1.5" result="blur2"/>
                      <feMerge>
                        <feMergeNode in="blur2" />
                        <feMergeNode in="blur1" />
                        <feMergeNode in="SourceGraphic" />
                      </feMerge>
                    </filter>
                  </defs>
                  <!-- Moon -->
                  <path d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21c2.889 0 5.517-1.388 7.354-3.646z" 
                    fill="url(#moonGradient)" 
                    opacity="0.95"/>
                  <!-- Bokeh glow around moon -->
                  <path d="M20.354 15.354A9 9 0 018.646 3.646 9.003 9.003 0 0012 21c2.889 0 5.517-1.388 7.354-3.646z" 
                    fill="url(#moonGradient)" 
                    opacity="0.3"
                    filter="url(#moonBokeh)"
                    transform="scale(1.1) translate(-1.2, -1.2)"/>
                  <!-- Stars with twinkle -->
                  <g fill="url(#moonGradient)">
                    <circle cx="3" cy="3" r="1" opacity="0.6">
                      <animate attributeName="opacity" values="0.3;0.9;0.3" dur="3s" repeatCount="indefinite"/>
                      <animate attributeName="r" values="1;1.2;1" dur="3s" repeatCount="indefinite"/>
                    </circle>
                    <circle cx="7" cy="7" r="0.5" opacity="0.5">
                      <animate attributeName="opacity" values="0.4;1;0.4" dur="2.5s" begin="0.5s" repeatCount="indefinite"/>
                      <animate attributeName="r" values="0.5;0.7;0.5" dur="2.5s" begin="0.5s" repeatCount="indefinite"/>
                    </circle>
                    <circle cx="5" cy="12" r="0.7" opacity="0.4">
                      <animate attributeName="opacity" values="0.3;0.8;0.3" dur="3.5s" begin="1s" repeatCount="indefinite"/>
                      <animate attributeName="r" values="0.7;0.9;0.7" dur="3.5s" begin="1s" repeatCount="indefinite"/>
                    </circle>
                  </g>
                </svg>`;
          };
          
          toggle.addEventListener('click', () => {
            html.classList.toggle('dark');
            const isDark = html.classList.contains('dark');
            localStorage.setItem('theme', isDark ? 'dark' : 'light');
            updateIcon();
          });
          
          // Set initial toggle button icon
          updateIcon();
        }
      });
    </script>
  </body>
</html>

<style is:global>
  :root {
    /* Color Palette */
    --color-dark: #14080E;
    --color-secondary: #49475B;
    --color-tertiary: #799496;
    --color-accent: #ACC196;
    --color-light: #E9EB9E;

    /* Functional Colors */
    --primary-color: var(--color-tertiary);
    --primary-dark: var(--color-dark);
    --text-color: var(--color-dark);
    --text-light: var(--color-secondary);
    --background-color: #f9fafb;
    --background-alt: #f1f5f9;
    --border-color: var(--color-tertiary);
    --card-shadow: 0 4px 6px -1px rgba(20, 8, 14, 0.1), 0 2px 4px -1px rgba(20, 8, 14, 0.06);

    /* Typography */
    --font-main-header: 'Maitree', serif;
    --font-secondary-header: 'Cairo', sans-serif;
    --font-body: 'Hind', sans-serif;
  }

  html.dark {
    --primary-color: var(--color-tertiary);
    --primary-dark: var(--color-accent);
    --text-color: #f3f4f6;
    --text-light: var(--color-light);
    --background-color: var(--color-dark);
    --background-alt: var(--color-secondary);
    --border-color: var(--color-tertiary);
    --card-shadow: 0 4px 16px -1px rgba(0,0,0,0.5), 0 2px 4px -1px rgba(0,0,0,0.3);
  }

  html.dark body {
    background: var(--background-color);
    color: var(--text-color);
  }

  html.dark .card,
  html.dark .skill-card,
  html.dark .project-card,
  html.dark .post-card,
  html.dark .sidebar-widget,
  html.dark .profile-sidebar,
  html.dark .portfolio-item,
  html.dark .cta-card,
  html.dark .contact {
    background: var(--background-alt);
    color: var(--text-color);
    box-shadow: var(--card-shadow);
  }

  html.dark a {
    color: var(--primary-color);
  }

  html.dark a:hover {
    color: var(--primary-dark);
  }

  html.dark .footer {
    background-color: #18181b;
    color: #f3f4f6;
  }

  html.dark .footer-logo a {
    color: #f3f4f6;
  }

  html.dark .footer-section h3 {
    color: #a1a1aa;
  }

  html.dark .footer-section a {
    color: #a1a1aa;
  }

  html.dark .footer-section a:hover {
    color: #f3f4f6;
  }

  html.dark .footer-bottom {
    color: #71717a;
    border-top: 1px solid #27272a;
  }

  html.dark .btn,
  html.dark .btn-primary,
  html.dark .btn-secondary,
  html.dark .btn-small {
    color: #f3f4f6 !important;
    border-color: var(--color-accent);
  }

  html.dark .btn-primary {
    background-color: var(--color-accent);
  }

  html.dark .btn-primary:hover,
  html.dark .btn-primary:active {
    background-color: var(--color-accent);
    color: #f3f4f6 !important;
  }

  html.dark .btn-secondary,
  html.dark .btn-small {
    background-color: rgba(233, 235, 158, 0.1);
  }

  html.dark .btn-secondary:hover,
  html.dark .btn-secondary:active,
  html.dark .btn-small:hover,
  html.dark .btn-small:active {
    background-color: var(--color-accent);
    color: #f3f4f6 !important;
  }

  /* Dark mode toggle button styles */
  .theme-toggle {
    position: fixed;
    top: 1rem;
    right: 1rem;
    z-index: 200;
    width: 48px;
    height: 48px;
    border: 2px solid;
    border-color: var(--color-secondary);
    border-radius: 50%;
    background: rgba(255, 255, 255, 0.1);
    backdrop-filter: blur(10px);
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
    overflow: hidden;
  }

  html.dark .theme-toggle {
    background: rgba(0, 0, 0, 0.3);
    border-color: var(--color-light);
  }

  .theme-icon {
    display: flex;
    align-items: center;
    justify-content: center;
    width: 24px;
    height: 24px;
    transition: transform 0.3s ease;
  }

  .theme-toggle:hover .theme-icon {
    transform: scale(1.2);
  }

  .theme-toggle:active .theme-icon {
    transform: scale(0.95);
  }

  /* Bokeh glow effect */
  .bokeh-glow {
    position: absolute;
    inset: -50%;
    background: radial-gradient(circle at center, 
      rgba(251, 191, 36, 0.4) 0%, 
      rgba(251, 191, 36, 0.2) 20%,
      rgba(251, 191, 36, 0.1) 40%,
      transparent 70%
    );
    opacity: 0;
    transition: opacity 0.3s ease;
    pointer-events: none;
    filter: blur(8px);
  }

  html.dark .bokeh-glow {
    background: radial-gradient(circle at center, 
      rgba(233, 235, 158, 0.4) 0%, 
      rgba(233, 235, 158, 0.2) 20%,
      rgba(233, 235, 158, 0.1) 40%,
      transparent 70%
    );
  }

  .theme-toggle:hover .bokeh-glow {
    opacity: 0.6;
    animation: bokeh-pulse 2s ease-in-out infinite;
  }

  @keyframes bokeh-pulse {
    0%, 100% { 
      transform: scale(1);
      opacity: 0.4;
    }
    50% { 
      transform: scale(1.2);
      opacity: 0.6;
    }
  }

  /* Additional subtle glow layers */
  .theme-toggle::before {
    content: '';
    position: absolute;
    inset: -2px;
    border-radius: 50%;
    background: radial-gradient(circle at 30% 30%, 
      rgba(255, 255, 255, 0.3) 0%, 
      transparent 50%
    );
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .theme-toggle:hover::before {
    opacity: 1;
  }

  .theme-toggle::after {
    content: '';
    position: absolute;
    inset: 0;
    border-radius: 50%;
    box-shadow: 
      inset 0 1px 2px rgba(255, 255, 255, 0.2),
      inset 0 -1px 2px rgba(0, 0, 0, 0.1);
  }

  * {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
  }
  
  html {
    font-family: var(--font-body);
    scroll-behavior: smooth;
  }

  body {
    margin: 0;
    padding: 0;
    background: var(--background-color);
    color: var(--text-color);
    line-height: 1.6;
    font-family: var(--font-body);
    transition: background 0.3s ease, color 0.3s ease;
  }

  h1, h2 {
    font-family: var(--font-main-header);
    margin: 0 0 1rem 0;
    line-height: 1.2;
    font-weight: 600;
  }

  h3, h4, h5, h6 {
    font-family: var(--font-secondary-header);
    margin: 0 0 1rem 0;
    line-height: 1.2;
    font-weight: 500;
  }

  h1 {
    font-size: 2.5rem;
  }

  h2 {
    font-size: 2rem;
  }

  h3 {
    font-size: 1.5rem;
  }

  p {
    margin-bottom: 1rem;
  }

  a {
    color: var(--primary-color);
    text-decoration: none;
  }

  a:hover {
    color: var(--primary-dark);
  }
  
  main {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem;
    min-height: calc(100vh - 180px);
    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
    animation: fluid-entry 0.8s ease-out;
  }

  @keyframes fluid-entry {
    0% {
      opacity: 0;
      transform: translateY(10px) scale(0.98);
    }
    100% {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  img {
    max-width: 100%;
    height: auto;
  }

  code {
    font-family: ui-monospace, SFMono-Regular, Menlo, Monaco, Consolas, "Liberation Mono", "Courier New", monospace;
    font-size: 0.9em;
    background-color: var(--background-alt);
    padding: 0.2em 0.4em;
    border-radius: 3px;
  }

  .card {
    background: white;
    border-radius: 8px;
    box-shadow: var(--card-shadow);
    padding: 1.5rem;
    margin-bottom: 1.5rem;
    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
    overflow: hidden;
    position: relative;
  }

  .card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, rgba(121, 148, 150, 0.1), rgba(172, 193, 150, 0.1));
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: 1;
    pointer-events: none;
  }

  .card:hover {
    transform: translateY(-5px) scale(1.01);
    box-shadow: 0 15px 30px rgba(20, 8, 14, 0.1), 0 5px 15px rgba(20, 8, 14, 0.05);
  }

  .card:hover::before {
    opacity: 1;
  }

  .btn {
    display: inline-block;
    background-color: var(--primary-color);
    color: white;
    padding: 0.5rem 1.5rem;
    border-radius: 30px;
    font-weight: 500;
    font-family: var(--font-secondary-header);
    position: relative;
    overflow: hidden;
    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
    z-index: 1;
    will-change: transform, box-shadow;
  }

  /* Better contrast for primary buttons in light mode */
  .btn-primary {
    background-color: var(--color-secondary);
    color: var(--color-light) !important;
  }

  /* Light mode secondary button styles */
  .btn-secondary {
    background-color: transparent;
    color: var(--color-dark) !important;
    border: 2px solid var(--color-secondary);
  }

  .btn-secondary:hover {
    background-color: var(--color-secondary);
    color: var(--color-light) !important;
  }

  .btn::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(135deg, rgba(121, 148, 150, 0.8), rgba(172, 193, 150, 0.8));
    opacity: 0;
    transition: opacity 0.3s ease;
    z-index: -1;
  }

  .btn:hover {
    transform: translateY(-2px) scale(1.03);
    box-shadow: 0 7px 14px rgba(20, 8, 14, 0.2), 0 3px 6px rgba(20, 8, 14, 0.1);
    color: white;
  }

  .btn-primary:hover {
    background-color: var(--color-dark);
    color: var(--color-light);
  }

  .btn:hover::before {
    opacity: 1;
  }

  .btn:active {
    transform: translateY(1px) scale(0.98);
    box-shadow: 0 3px 6px rgba(20, 8, 14, 0.1), 0 1px 3px rgba(20, 8, 14, 0.08);
    transition-duration: 0.1s;
  }

  .container {
    width: 100%;
    max-width: 1200px;
    margin: 0 auto;
    padding: 0 1rem;
  }

  .section {
    margin: 4rem 0;
  }

  /* Liquid Design Animations */
  .liquid-transition {
    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
    will-change: transform, opacity;
  }

  .liquid-appear {
    animation: liquid-fade-in 0.6s cubic-bezier(0.25, 0.8, 0.25, 1);
  }

  @keyframes liquid-fade-in {
    0% {
      opacity: 0;
      transform: translateY(20px) scale(0.95);
    }
    100% {
      opacity: 1;
      transform: translateY(0) scale(1);
    }
  }

  .liquid-ripple {
    position: relative;
    overflow: hidden;
  }

  .liquid-ripple::after {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 5px;
    height: 5px;
    background: rgba(255, 255, 255, 0.5);
    opacity: 0;
    border-radius: 100%;
    transform: scale(1, 1) translate(-50%, -50%);
    transform-origin: 50% 50%;
  }

  .liquid-ripple:focus:not(:active)::after {
    animation: ripple 0.5s ease-out;
  }

  @keyframes ripple {
    0% {
      transform: scale(0, 0);
      opacity: 0.3;
    }
    100% {
      transform: scale(100, 100);
      opacity: 0;
    }
  }

  /* Reduce motion */
  @media (prefers-reduced-motion: reduce) {
    *, *::before, *::after {
      animation-duration: 0.01ms !important;
      animation-iteration-count: 1 !important;
      transition-duration: 0.01ms !important;
      scroll-behavior: auto !important;
    }

    .card:hover, .btn:hover {
      transform: none !important;
    }
  }

  @media (max-width: 768px) {
    h1 {
      font-size: 2rem;
    }

    h2 {
      font-size: 1.75rem;
    }

    h3 {
      font-size: 1.25rem;
    }

    main {
      padding: 1rem;
    }
  }
</style>