---
// Import necessary tools and types
import { Image } from 'astro:assets';
import type { CollectionEntry } from 'astro:content';

// Define the props for this component
interface Props {
  credential: CollectionEntry<'credentials'>;
  size?: 'sm' | 'md' | 'lg';
}

// Get the credential data from props
const { credential, size = 'md' } = Astro.props;
const { title, organization, issueDate, expirationDate, badgeImage, category } = credential.data;

// Format dates
const formattedIssueDate = new Date(issueDate).toLocaleDateString('en-US', {
  year: 'numeric',
  month: 'short'
});

const formattedExpirationDate = expirationDate 
  ? new Date(expirationDate).toLocaleDateString('en-US', { year: 'numeric', month: 'short' })
  : 'No Expiration';

// Size classes
const sizeClasses = {
  sm: 'w-16 h-16',
  md: 'w-24 h-24',
  lg: 'w-32 h-32'
};

// Status class
const isExpired = expirationDate ? new Date(expirationDate) < new Date() : false;
const statusClass = isExpired ? 'credential-expired' : 'credential-active';
---

<div class={`credential-badge ${sizeClasses[size]} ${statusClass}`}>
  <div class="badge-container">
    <!-- Badge image or placeholder -->
    <div class="badge-image">
      <!-- If you have actual images, replace this with the Image component -->
      <div class="placeholder-image">
        <span class="badge-text">{badgeImage}</span>
      </div>
    </div>
    
    <!-- Hover card with details -->
    <div class="credential-details">
      <div class="detail-header">
        <h3 class="credential-title">{title}</h3>
        <span class="credential-org">{organization}</span>
      </div>
      
      <div class="detail-dates">
        <div class="date-item">
          <span class="date-label">Issued:</span>
          <span class="date-value">{formattedIssueDate}</span>
        </div>
        
        <div class="date-item">
          <span class="date-label">Expires:</span>
          <span class="date-value">{formattedExpirationDate}</span>
        </div>
      </div>
      
      <div class="detail-category">
        <span class="category-badge">{category}</span>
      </div>
      
      <div class="detail-link">
        <a href={`/credentials/${credential.slug}`} class="view-details">View Details</a>
      </div>
    </div>
  </div>
</div>

<style>
  .credential-badge {
    position: relative;
    border-radius: 50%;
    overflow: visible;
    transition: transform 0.3s ease;
  }
  
  .badge-container {
    position: relative;
    width: 100%;
    height: 100%;
    border-radius: 50%;
    overflow: hidden;
    box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
  }
  
  .credential-badge:hover {
    transform: scale(1.05);
    z-index: 10;
  }
  
  .badge-image {
    width: 100%;
    height: 100%;
    border-radius: 50%;
    overflow: hidden;
  }
  
  .placeholder-image {
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, var(--primary-color), var(--primary-dark));
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-weight: bold;
    font-size: 0.75rem;
    text-align: center;
  }
  
  .credential-details {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, calc(-100% - 20px));
    width: 240px;
    background: white;
    border-radius: 8px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.15);
    padding: 1rem;
    opacity: 0;
    visibility: hidden;
    transition: all 0.3s cubic-bezier(0.68, -0.55, 0.27, 1.55);
    pointer-events: none;
    z-index: 20;
  }
  
  /* Triangle pointer */
  .credential-details::after {
    content: '';
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 0;
    height: 0;
    border-left: 10px solid transparent;
    border-right: 10px solid transparent;
    border-top: 10px solid white;
  }
  
  .credential-badge:hover .credential-details {
    opacity: 1;
    visibility: visible;
    transform: translate(-50%, calc(-100% - 10px));
    pointer-events: auto;
  }
  
  .detail-header {
    margin-bottom: 0.75rem;
    text-align: center;
  }
  
  .credential-title {
    font-size: 1rem;
    font-weight: 600;
    margin-bottom: 0.25rem;
    color: var(--text-color);
  }
  
  .credential-org {
    font-size: 0.85rem;
    color: var(--text-light);
  }
  
  .detail-dates {
    display: flex;
    justify-content: space-between;
    margin-bottom: 0.75rem;
    font-size: 0.8rem;
  }
  
  .date-item {
    display: flex;
    flex-direction: column;
  }
  
  .date-label {
    font-weight: 500;
    color: var(--text-light);
  }
  
  .detail-category {
    text-align: center;
    margin-bottom: 0.75rem;
  }
  
  .category-badge {
    display: inline-block;
    background: var(--background-alt);
    color: var(--text-light);
    padding: 0.2rem 0.5rem;
    border-radius: 4px;
    font-size: 0.75rem;
  }
  
  .detail-link {
    text-align: center;
  }
  
  .view-details {
    font-size: 0.85rem;
    color: var(--primary-color);
    text-decoration: none;
    font-weight: 500;
    transition: color 0.2s ease;
  }
  
  .view-details:hover {
    color: var(--primary-dark);
    text-decoration: underline;
  }
  
  /* Status styles */
  .credential-active .badge-container {
    border: 2px solid var(--primary-color);
  }
  
  .credential-expired .badge-container {
    border: 2px solid var(--text-light);
    opacity: 0.7;
  }
  
  .credential-expired .placeholder-image {
    background: linear-gradient(45deg, var(--text-light), var(--background-alt));
  }
  
  /* Responsive adjustments */
  @media (max-width: 768px) {
    .credential-details {
      width: 200px;
    }
  }
</style>