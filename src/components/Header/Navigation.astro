---
import { getCollection } from 'astro:content';
import Icon from '../Icon/Icon.astro';

// Get all thoughtful apps for the dropdown
const apps = await getCollection('thoughtful-apps');
const sortedApps = apps.sort((a, b) => a.data.title.localeCompare(b.data.title));
---

<header class="header">
  <div class="container">
    <a href="/" class="logo">shupp.dev</a>
    
    <!-- Mobile controls -->
    <div class="mobile-controls">
      <button id="nav-theme-toggle" class="theme-toggle-nav" aria-label="Toggle dark mode">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" class="theme-icon-svg">
          <circle class="sun-icon" cx="12" cy="12" r="5" stroke="currentColor" stroke-width="2"/>
          <path class="sun-rays" d="M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
          <path class="moon-icon" d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
      <button class="hamburger-menu" aria-label="Toggle navigation menu">
        <div class="hamburger-icon">
          <span class="hamburger-line"></span>
          <span class="hamburger-line"></span>
          <span class="hamburger-line"></span>
        </div>
      </button>
    </div>
    
    <nav class="nav">
      <ul class="nav-list">
        <li class="nav-item">
          <a href="/" class="nav-link" data-tooltip="Home">
            <span class="nav-icon">
              <Icon name="House" size={20} weight="duotone" liquid={true} />
            </span>
            <span class="nav-text">Home</span>
          </a>
        </li>
        <li class="nav-item">
          <a href="/about" class="nav-link" data-tooltip="About">
            <span class="nav-icon">
              <Icon name="User" size={20} weight="duotone" liquid={true} />
            </span>
            <span class="nav-text">About</span>
          </a>
        </li>
        <li class="nav-item">
          <a href="/portfolio" class="nav-link" data-tooltip="Portfolio">
            <span class="nav-icon">
              <Icon name="Briefcase" size={20} weight="duotone" liquid={true} />
            </span>
            <span class="nav-text">Portfolio</span>
          </a>
        </li>
        <li class="nav-item">
          <a href="/blog" class="nav-link" data-tooltip="Blog">
            <span class="nav-icon">
              <Icon name="Article" size={20} weight="duotone" liquid={true} />
            </span>
            <span class="nav-text">Blog</span>
          </a>
        </li>
        <li class="nav-item dropdown apps-dropdown">
          <a href="/thoughtful-app-co" class="nav-link" data-tooltip="Apps Co.">
            <span class="nav-icon brain-icon">
              <Icon name="Brain" size={20} weight="duotone" liquid={true} />
            </span>
            <span class="nav-text">Apps Co.</span>
          </a>
          <div class="dropdown-content">
            <a href="/thoughtful-app-co" class="dropdown-link">View All Apps</a>
            <div class="dropdown-divider"></div>
            {sortedApps.map(app => (
              <a href={`/thoughtful-app-co/${app.slug}`} class="dropdown-link app-link">
                <span class="app-status-dot" data-status={app.data.status}></span>
                {app.data.title}
              </a>
            ))}
          </div>
        </li>
        <li class="nav-item">
          <a href="/tools" class="nav-link" data-tooltip="Tools">
            <span class="nav-icon tools-icon">
              <Icon name="Wrench" size={20} weight="duotone" liquid={true} />
            </span>
            <span class="nav-text">Tools</span>
          </a>
        </li>
        <li class="nav-item">
          <a href="/roadmap" class="nav-link" data-tooltip="Roadmap">
            <span class="nav-icon">
              <Icon name="MapTrifold" size={20} weight="duotone" liquid={true} />
            </span>
            <span class="nav-text">Roadmap</span>
          </a>
        </li>
      </ul>
      
      <!-- Desktop theme toggle -->
      <button id="desktop-theme-toggle" class="theme-toggle-nav desktop-only" aria-label="Toggle dark mode">
        <svg width="20" height="20" viewBox="0 0 24 24" fill="none" class="theme-icon-svg">
          <circle class="sun-icon" cx="12" cy="12" r="5" stroke="currentColor" stroke-width="2"/>
          <path class="sun-rays" d="M12 1v2M12 21v2M4.22 4.22l1.42 1.42M18.36 18.36l1.42 1.42M1 12h2M21 12h2M4.22 19.78l1.42-1.42M18.36 5.64l1.42-1.42" stroke="currentColor" stroke-width="2" stroke-linecap="round"/>
          <path class="moon-icon" d="M21 12.79A9 9 0 1 1 11.21 3 7 7 0 0 0 21 12.79z" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
        </svg>
      </button>
    </nav>
  </div>
</header>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    // Handle hamburger menu toggle
    const hamburgerMenu = document.querySelector('.hamburger-menu');
    const nav = document.querySelector('.nav');
    const header = document.querySelector('.header');

    if (hamburgerMenu && nav) {
      hamburgerMenu.addEventListener('click', () => {
        hamburgerMenu.classList.toggle('active');
        nav.classList.toggle('mobile-open');
        // Prevent body scroll when menu is open
        document.body.style.overflow = nav.classList.contains('mobile-open') ? 'hidden' : '';
      });

      // Close mobile menu when clicking outside
      document.addEventListener('click', (e) => {
        if (!hamburgerMenu.contains(e.target) && !nav.contains(e.target)) {
          hamburgerMenu.classList.remove('active');
          nav.classList.remove('mobile-open');
          document.body.style.overflow = '';
        }
      });

      // Close mobile menu when clicking a link
      const navLinks = nav.querySelectorAll('.nav-link');
      navLinks.forEach(link => {
        link.addEventListener('click', () => {
          hamburgerMenu.classList.remove('active');
          nav.classList.remove('mobile-open');
          document.body.style.overflow = '';
        });
      });
    }

    // Handle theme toggles (both mobile and desktop)
    const mobileThemeToggle = document.getElementById('nav-theme-toggle');
    const desktopThemeToggle = document.getElementById('desktop-theme-toggle');
    const html = document.documentElement;
    
    const updateThemeIcons = () => {
      const isDark = html.classList.contains('dark');
      [mobileThemeToggle, desktopThemeToggle].forEach(toggle => {
        if (toggle) {
          toggle.classList.toggle('dark-mode', isDark);
        }
      });
    };

    const handleThemeToggle = () => {
      html.classList.toggle('dark');
      const isDark = html.classList.contains('dark');
      localStorage.setItem('theme', isDark ? 'dark' : 'light');
      updateThemeIcons();
      
      // Dispatch custom event for other components
      window.dispatchEvent(new CustomEvent('themechange', { 
        detail: { isDarkMode: isDark } 
      }));
    };

    // Add click handlers to both toggles
    if (mobileThemeToggle) {
      mobileThemeToggle.addEventListener('click', handleThemeToggle);
    }
    
    if (desktopThemeToggle) {
      desktopThemeToggle.addEventListener('click', handleThemeToggle);
    }

    // Set initial state
    updateThemeIcons();
    
    // Listen for theme changes from other sources
    window.addEventListener('themechange', (e) => {
      updateThemeIcons();
    });

    // Handle mobile dropdown toggle
    const appsDropdown = document.querySelector('.apps-dropdown');
    if (appsDropdown) {
      const appsLink = appsDropdown.querySelector('.nav-link');
      
      appsLink.addEventListener('click', (e) => {
        // If on mobile and menu is open, allow navigation to the main page
        if (window.innerWidth <= 768 && nav.classList.contains('mobile-open')) {
          // Let the link navigate normally, don't prevent default
          // The menu will close due to the navLinks click handler above
          return;
        }
        // On desktop, let hover handle the dropdown
      });
    }
  });
</script>

<style>
  .header {
    background-color: rgba(255, 255, 255, 0.95);
    backdrop-filter: blur(10px);
    -webkit-backdrop-filter: blur(10px);
    box-shadow: 0 4px 20px rgba(20, 8, 14, 0.06);
    position: sticky;
    top: 0;
    z-index: 100;
    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
  }

  html.dark .header {
    background-color: rgba(35, 35, 43, 0.95);
    box-shadow: 0 4px 20px rgba(0, 0, 0, 0.2);
  }

  .header:hover {
    box-shadow: 0 6px 30px rgba(20, 8, 14, 0.1);
  }

  .container {
    display: flex;
    align-items: center;
    justify-content: space-between;
    max-width: 1200px;
    margin: 0 auto;
    padding: 1rem 2rem;
    position: relative;
  }

  .container::after {
    content: '';
    position: absolute;
    bottom: 0;
    left: 2rem;
    right: 2rem;
    height: 1px;
    background: linear-gradient(to right,
      rgba(121, 148, 150, 0),
      rgba(121, 148, 150, 0.3) 20%,
      rgba(121, 148, 150, 0.3) 80%,
      rgba(121, 148, 150, 0)
    );
    transform: scaleX(0);
    transition: transform 0.5s cubic-bezier(0.25, 0.8, 0.25, 1);
  }

  .header:hover .container::after {
    transform: scaleX(1);
  }

  .logo {
    font-size: 1.5rem;
    font-weight: 500;
    font-family: var(--font-main-header);
    color: var(--color-dark);
    text-decoration: none;
    position: relative;
    transition: all 0.3s ease;
    letter-spacing: 0.15em;
    text-transform: lowercase;
  }

  html.dark .logo {
    color: #f3f4f6;
  }

  .logo::after {
    content: '';
    position: absolute;
    bottom: -4px;
    left: 0;
    width: 0;
    height: 2px;
    background: linear-gradient(to right, var(--color-tertiary), var(--color-accent));
    transition: width 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
  }

  .logo:hover {
    color: var(--color-secondary);
    transform: translateY(-2px);
  }

  .logo:hover::after {
    width: 100%;
  }

  .nav {
    display: flex;
    align-items: center;
    gap: 1rem;
  }

  .nav-list {
    display: flex;
    list-style: none;
    margin: 0;
    padding: 0;
    gap: 2.5rem;
  }

  .nav-link {
    color: var(--color-secondary);
    text-decoration: none;
    font-weight: 500;
    font-family: var(--font-secondary-header);
    position: relative;
    padding: 0.5rem 0;
    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
    display: inline-flex;
    align-items: center;
    gap: 0.4rem;
  }

  .nav-text {
    transition: all 0.3s ease;
  }

  .nav-icon {
    display: inline-flex;
    align-items: center;
    transition: transform 0.3s ease;
    position: relative;
  }

  .nav-link:hover .nav-icon {
    transform: rotate(-5deg) scale(1.1);
  }

  /* Hover tooltips for icon-only mode - desktop only */
  @media (min-width: 769px) {
    .nav-link[data-tooltip]:hover::after {
      content: attr(data-tooltip);
      position: absolute;
      top: 100%;
      left: 50%;
      transform: translateX(-50%);
      background: var(--color-dark);
      color: white;
      padding: 0.5rem 0.75rem;
      border-radius: 4px;
      font-size: 0.875rem;
      white-space: nowrap;
      z-index: 1000;
      margin-top: 0.5rem;
      opacity: 0;
      animation: fadeInUp 0.2s ease forwards;
    }
  }

  @media (min-width: 769px) {
    html.dark .nav-link[data-tooltip]:hover::after {
      background: #23232b;
      color: #f3f4f6;
    }
  }

  @keyframes fadeInUp {
    from {
      opacity: 0;
      transform: translateX(-50%) translateY(-10px);
    }
    to {
      opacity: 1;
      transform: translateX(-50%) translateY(0);
    }
  }
  
  /* Icon styling for Phosphor icons */
  .brain-icon,
  .tools-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
  }
  
  /* Dark mode adjustments */
  html.dark .nav-icon {
    filter: brightness(1.2);
  }

  html.dark .brain-icon,
  html.dark .tools-icon {
    filter: brightness(1.3) contrast(0.9);
  }

  html.dark .nav-link {
    color: #c5c5d2;
  }

  .nav-link::before {
    content: '';
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    height: 2px;
    background: linear-gradient(to right, var(--color-tertiary), var(--color-accent));
    transform: scaleX(0);
    transform-origin: right;
    transition: transform 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
  }

  .nav-link:hover {
    color: var(--color-dark);
    transform: translateY(-2px);
  }

  html.dark .nav-link:hover {
    color: #f3f4f6;
  }

  .nav-link:hover::before {
    transform: scaleX(1);
    transform-origin: left;
  }

  /* Dropdown styles */
  .dropdown {
    position: relative;
  }

  .dropdown-content {
    position: absolute;
    top: 100%;
    left: 50%;
    transform: translateX(-50%);
    min-width: 200px;
    background: white;
    border-radius: 8px;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.1);
    opacity: 0;
    visibility: hidden;
    transform-origin: top center;
    transform: translateX(-50%) translateY(10px) scale(0.95);
    transition: all 0.2s cubic-bezier(0.5, 0, 0.3, 1.5);
    z-index: 10;
    padding: 0.5rem 0;
    margin-top: 0.5rem;
    overflow: hidden;
    max-height: 400px;
    overflow-y: auto;
  }
  
  /* Wider dropdown for apps */
  .apps-dropdown .dropdown-content {
    min-width: 250px;
  }

  html.dark .dropdown-content {
    background: #23232b;
    box-shadow: 0 10px 25px rgba(0, 0, 0, 0.3);
  }

  .dropdown:hover .dropdown-content {
    opacity: 1;
    visibility: visible;
    transform: translateX(-50%) translateY(0) scale(1);
  }

  .dropdown-link {
    display: block;
    padding: 0.75rem 1.25rem;
    color: var(--text-color);
    text-decoration: none;
    font-weight: 500;
    font-size: 0.9rem;
    transition: all 0.2s ease;
  }

  html.dark .dropdown-link {
    color: #c5c5d2;
  }

  .dropdown-link:hover {
    background-color: var(--background-alt);
    color: var(--primary-color);
  }

  html.dark .dropdown-link:hover {
    background-color: rgba(233, 235, 158, 0.1);
    color: #f3f4f6;
  }

  /* Dropdown divider */
  .dropdown-divider {
    height: 1px;
    background: var(--border-color);
    margin: 0.5rem 0;
  }

  /* App link styles */
  .app-link {
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .app-status-dot {
    width: 8px;
    height: 8px;
    border-radius: 50%;
    flex-shrink: 0;
  }

  .app-status-dot[data-status="concept"] {
    background-color: #3b82f6;
  }

  .app-status-dot[data-status="exploring"] {
    background-color: #eab308;
  }

  .app-status-dot[data-status="prototyping"] {
    background-color: #22c55e;
  }

  .app-status-dot[data-status="shelved"] {
    background-color: #6b7280;
  }

  /* Mobile controls container */
  .mobile-controls {
    display: none;
    align-items: center;
    gap: 0.75rem;
  }

  /* Theme toggle styling - shared between mobile and desktop */
  .theme-toggle-nav {
    background: transparent;
    border: 2px solid var(--color-secondary);
    border-radius: 50%;
    width: 40px;
    height: 40px;
    display: flex;
    align-items: center;
    justify-content: center;
    cursor: pointer;
    transition: all 0.3s ease;
    color: var(--color-secondary);
  }

  /* Desktop only theme toggle */
  .desktop-only {
    display: flex;
    margin-left: 1rem;
  }

  .theme-toggle-nav:hover {
    background-color: rgba(121, 148, 150, 0.1);
    transform: scale(1.05);
  }

  html.dark .theme-toggle-nav {
    border-color: var(--color-light);
    color: var(--color-light);
  }

  html.dark .theme-toggle-nav:hover {
    background-color: rgba(233, 235, 158, 0.1);
  }

  .theme-icon-svg {
    width: 20px;
    height: 20px;
  }

  /* Show sun icon by default, hide moon */
  .theme-toggle-nav .moon-icon {
    display: none;
  }

  .theme-toggle-nav .sun-icon,
  .theme-toggle-nav .sun-rays {
    display: block;
  }

  /* In dark mode, show moon, hide sun */
  .theme-toggle-nav.dark-mode .sun-icon,
  .theme-toggle-nav.dark-mode .sun-rays {
    display: none;
  }

  .theme-toggle-nav.dark-mode .moon-icon {
    display: block;
  }

  /* Hamburger menu - hidden by default */
  .hamburger-menu {
    display: none;
  }

  /* Tablet responsive - icon only mode */
  @media (max-width: 1024px) and (min-width: 769px) {
    .nav-text {
      display: none;
    }

    .nav-link {
      gap: 0;
      justify-content: center;
      min-width: 44px;
    }

    /* Add tooltips for icon-only mode */
    .nav-link[data-tooltip] {
      position: relative;
    }

    .nav-link[data-tooltip]:hover::after {
      content: attr(data-tooltip);
    }
  }

  /* Mobile responsive - show mobile controls and hamburger */
  @media (max-width: 768px) {
    .container {
      padding: 1rem 1.5rem;
      flex-direction: row;
      justify-content: space-between;
      align-items: center;
    }

    .mobile-controls {
      display: flex;
      justify-content: flex-end;
      align-items: center;
    }

    /* Ensure no tooltips show on mobile */
    .nav-link[data-tooltip]::after {
      display: none !important;
    }
    
    /* Hide desktop theme toggle on mobile */
    .desktop-only {
      display: none !important;
    }

    .nav-list {
      gap: 1.5rem;
    }
    .nav {
      display: none;
      position: fixed;
      top: 72px;
      left: 0;
      right: 0;
      background-color: rgba(255, 255, 255, 0.98);
      backdrop-filter: blur(10px);
      -webkit-backdrop-filter: blur(10px);
      box-shadow: 0 4px 20px rgba(20, 8, 14, 0.1);
      max-height: calc(100vh - 72px);
      overflow-y: auto;
      transform: translateY(-100%);
      opacity: 0;
      visibility: hidden;
      transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
      z-index: 999;
    }

    html.dark .nav {
      background-color: rgba(35, 35, 43, 0.98);
    }

    .nav.mobile-open {
      display: block;
      transform: translateY(0);
      opacity: 1;
      visibility: visible;
    }

    .nav.mobile-open .nav-list {
      list-style: none;
      padding: 1rem;
      margin: 0;
      display: flex;
      flex-direction: column;
      gap: 0.5rem;
    }

    .nav.mobile-open .nav-link {
      display: flex;
      align-items: center;
      gap: 0.75rem;
      padding: 1rem;
      color: var(--text-color);
      text-decoration: none;
      border-radius: 8px;
      transition: all 0.2s ease;
    }

    .nav.mobile-open .nav-text {
      display: inline;
    }

    html.dark .nav.mobile-open .nav-link {
      color: #f3f4f6;
    }

    .nav.mobile-open .nav-link:hover {
      background-color: rgba(121, 148, 150, 0.1);
    }

    html.dark .nav.mobile-open .nav-link:hover {
      background-color: rgba(233, 235, 158, 0.1);
    }

    .nav.mobile-open .nav-icon {
      flex-shrink: 0;
    }

    .hamburger-menu {
      display: block;
      background: none;
      border: none;
      cursor: pointer;
      padding: 0.5rem;
      border-radius: 4px;
      transition: background-color 0.2s ease;
    }

    .hamburger-menu:hover {
      background-color: rgba(121, 148, 150, 0.1);
    }

    html.dark .hamburger-menu:hover {
      background-color: rgba(233, 235, 158, 0.1);
    }

    .hamburger-icon {
      width: 24px;
      height: 24px;
      display: flex;
      flex-direction: column;
      justify-content: space-around;
    }

    .hamburger-line {
      width: 100%;
      height: 2px;
      background-color: var(--color-secondary);
      transition: all 0.3s ease;
      transform-origin: center;
    }

    html.dark .hamburger-line {
      background-color: #c5c5d2;
    }

    .hamburger-menu.active .hamburger-line:nth-child(1) {
      transform: rotate(45deg) translate(6px, 6px);
    }

    .hamburger-menu.active .hamburger-line:nth-child(2) {
      opacity: 0;
    }

    .hamburger-menu.active .hamburger-line:nth-child(3) {
      transform: rotate(-45deg) translate(6px, -6px);
    }
  }



  /* Responsive dropdown */
  @media (max-width: 768px) {
    .dropdown-content {
      position: static;
      transform: none;
      box-shadow: none;
      opacity: 1;
      visibility: visible;
      background: transparent;
      margin-top: 0.5rem;
      padding-left: 1rem;
      border-left: 2px solid var(--border-color);
      display: none;
    }

    .dropdown.active .dropdown-content {
      display: block;
    }

    .dropdown-link {
      padding: 0.5rem 1rem;
    }

    .dropdown-link:hover {
      background-color: transparent;
    }
  }


</style>