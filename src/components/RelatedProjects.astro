---
import { getCollection } from 'astro:content';

interface Props {
  projectSlugs: string[];
}

const { projectSlugs } = Astro.props;

// Get all projects
const allProjects = await getCollection('projects');

// Filter to only get the related projects
const relatedProjects = allProjects.filter(project => 
  projectSlugs.includes(project.slug)
);

// Sort by date (newest first)
relatedProjects.sort((a, b) => 
  new Date(b.data.projectDate).getTime() - new Date(a.data.projectDate).getTime()
);
---

{relatedProjects.length > 0 && (
  <div class="related-projects">
    <h2 class="related-title">Related Projects</h2>
    <div class="projects-grid">
      {relatedProjects.map(project => (
        <a href={`/portfolio/${project.slug}`} class="project-card">
          <div class="project-image">
            {project.data.projectImage && (
              <div class="placeholder-image">{project.data.projectImage}</div>
            )}
            {project.data.completed ? (
              <span class="project-status completed">Completed</span>
            ) : (
              <span class="project-status in-progress">In Progress</span>
            )}
          </div>
          <div class="project-content">
            <h3 class="project-title">{project.data.title}</h3>
            <p class="project-excerpt">{project.data.description}</p>
            <div class="project-tech">
              {project.data.technologies.slice(0, 4).map(tech => (
                <span class="tech-tag">{tech}</span>
              ))}
              {project.data.technologies.length > 4 && (
                <span class="tech-tag more">+{project.data.technologies.length - 4}</span>
              )}
            </div>
          </div>
        </a>
      ))}
    </div>
  </div>
)}

<style>
  .related-projects {
    margin-top: 4rem;
    padding-top: 2rem;
    border-top: 1px solid var(--border-color);
  }
  
  .related-title {
    font-size: 1.75rem;
    margin-bottom: 1.5rem;
    position: relative;
    padding-bottom: 0.5rem;
  }
  
  .related-title::after {
    content: "";
    position: absolute;
    left: 0;
    bottom: 0;
    width: 50px;
    height: 3px;
    background: var(--primary-color);
    border-radius: 3px;
  }
  
  .projects-grid {
    display: grid;
    grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
    gap: 1.5rem;
  }
  
  .project-card {
    display: flex;
    flex-direction: column;
    background: white;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: var(--card-shadow);
    transition: all 0.3s ease;
    text-decoration: none;
    color: inherit;
    height: 100%;
    position: relative;
  }
  
  .project-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 12px 20px rgba(0, 0, 0, 0.1);
  }
  
  .project-image {
    height: 0;
    padding-bottom: 56.25%; /* 16:9 aspect ratio */
    position: relative;
    overflow: hidden;
  }
  
  .placeholder-image {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: linear-gradient(45deg, var(--primary-color), var(--color-dark));
    display: flex;
    align-items: center;
    justify-content: center;
    color: white;
    font-weight: bold;
  }
  
  .project-status {
    position: absolute;
    top: 10px;
    right: 10px;
    font-size: 0.7rem;
    padding: 0.25rem 0.75rem;
    border-radius: 20px;
    font-weight: 500;
    z-index: 2;
  }
  
  .project-status.completed {
    background-color: #10b981;
    color: white;
  }
  
  .project-status.in-progress {
    background-color: #f59e0b;
    color: white;
  }
  
  .project-content {
    padding: 1.25rem;
    display: flex;
    flex-direction: column;
    flex-grow: 1;
  }
  
  .project-title {
    font-size: 1.2rem;
    margin-bottom: 0.75rem;
    transition: color 0.2s ease;
  }
  
  .project-card:hover .project-title {
    color: var(--primary-color);
  }
  
  .project-excerpt {
    color: var(--text-light);
    font-size: 0.9rem;
    margin-bottom: 1.25rem;
    line-height: 1.5;
    flex-grow: 1;
    display: -webkit-box;
    -webkit-line-clamp: 2;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .project-tech {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
  }
  
  .tech-tag {
    background: var(--background-alt);
    color: var(--text-light);
    font-size: 0.7rem;
    padding: 0.2rem 0.6rem;
    border-radius: 4px;
  }
  
  .tech-tag.more {
    background: var(--primary-color);
    color: white;
  }
  
  /* Dark mode adjustments */
  html.dark .project-card {
    background: var(--background-alt);
  }
  
  @media (max-width: 768px) {
    .projects-grid {
      grid-template-columns: 1fr;
    }
    
    .project-card:hover {
      transform: none;
    }
  }
</style>