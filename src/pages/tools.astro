---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import CardStyles from '../components/CardStyles.astro';
import Icon from '../components/Icon/Icon.astro';

// Get all tools
const allTools = await getCollection('tools');

// Sort tools by featured first, then by popularity
const tools = allTools.sort((a, b) => {
  if (a.data.featured && !b.data.featured) return -1;
  if (!a.data.featured && b.data.featured) return 1;
  return b.data.popularity - a.data.popularity;
});

// Category icons (Phosphor names)
const categoryIcons = {
  Financial: 'CurrencyDollar',
  Productivity: 'Lightning',
  Health: 'PersonSimpleRun',
  Lifestyle: 'Star',
  Analytics: 'ChartBar',
  Converter: 'ArrowsClockwise'
} as const;
---

<Layout title="Tools" description="Free, open-source tools for everyday use">
  <div class="tools-page">
    <section class="tools-hero">
      <h1>Tools</h1>
      <p class="lead">Free, open-source tools for everyday decisions</p>
    </section>

    <section class="tools-list">
      {tools.map(tool => {
        const iconName = categoryIcons[tool.data.category] || 'Wrench';
        return (
          <a href={`/tools/${tool.slug}`} class="tool-item">
            <div class="tool-icon-wrapper">
              <Icon name={iconName} size={32} weight="duotone" liquid={true} inkEffect="light" />
            </div>
            <div class="tool-content">
              <h3 class="tool-title">{tool.data.title}</h3>
              <p class="tool-description">{tool.data.description}</p>
            </div>
            <div class="tool-meta">
              <span class="tool-year">{tool.data.lastUpdated.getFullYear()}</span>
              {tool.data.status === 'active' && (
                <span class="tool-status">
                  <Icon name="CheckCircle" size={14} weight="fill" />
                  Active
                </span>
              )}
            </div>
          </a>
        );
      })}
    </section>
  </div>
</Layout>

<CardStyles />

<style>
  .tools-page {
    max-width: 900px;
    margin: 0 auto;
    padding: 4rem 1.5rem;
  }

  /* Hero Section */
  .tools-hero {
    margin-bottom: 4rem;
  }

  .tools-hero h1 {
    font-size: 2.5rem;
    font-weight: 700;
    margin-bottom: 0.75rem;
    color: var(--text-color);
  }

  .lead {
    font-size: 1.25rem;
    color: var(--text-light);
    line-height: 1.6;
  }

  /* Tools List */
  .tools-list {
    display: flex;
    flex-direction: column;
    gap: 0;
  }

  .tool-item {
    display: flex;
    align-items: flex-start;
    gap: 1.5rem;
    padding: 2rem 0;
    border-bottom: 1px solid var(--border-color);
    text-decoration: none;
    color: inherit;
    transition: all 0.2s ease;
    cursor: pointer;
  }
  
  .tool-icon-wrapper {
    flex-shrink: 0;
    width: 48px;
    height: 48px;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, rgba(59, 130, 246, 0.1), rgba(139, 92, 246, 0.1));
    border-radius: 12px;
    transition: all 0.3s ease;
  }
  
  .tool-item:hover .tool-icon-wrapper {
    transform: rotate(-5deg) scale(1.1);
    background: linear-gradient(135deg, rgba(59, 130, 246, 0.2), rgba(139, 92, 246, 0.2));
  }
  
  html.dark .tool-icon-wrapper {
    background: linear-gradient(135deg, rgba(59, 130, 246, 0.15), rgba(139, 92, 246, 0.15));
  }

  .tool-item:first-child {
    padding-top: 0;
  }

  .tool-item:last-child {
    border-bottom: none;
  }

  .tool-item:hover {
    opacity: 0.8;
  }

  .tool-item:hover .tool-title {
    color: var(--primary-color);
  }

  .tool-content {
    flex: 1;
    padding-right: 2rem;
  }

  .tool-title {
    font-size: 1.25rem;
    font-weight: 600;
    margin-bottom: 0.5rem;
    color: var(--text-color);
    transition: color 0.2s ease;
  }

  .tool-description {
    color: var(--text-light);
    line-height: 1.6;
    font-size: 1rem;
  }

  .tool-meta {
    display: flex;
    align-items: center;
    gap: 1rem;
    flex-shrink: 0;
    margin-left: auto;
  }

  .tool-year {
    color: var(--text-light);
    font-size: 0.95rem;
  }

  .tool-status {
    display: inline-flex;
    align-items: center;
    gap: 0.3rem;
    padding: 0.25rem 0.75rem;
    background: rgba(34, 197, 94, 0.1);
    color: #22c55e;
    border-radius: 20px;
    font-size: 0.85rem;
    font-weight: 500;
  }

  html.dark .tool-status {
    background: rgba(34, 197, 94, 0.15);
    color: #4ade80;
  }

  /* Responsive */
  @media (max-width: 768px) {
    .tools-page {
      padding: 3rem 1rem;
    }

    .tools-hero h1 {
      font-size: 2rem;
    }

    .lead {
      font-size: 1.1rem;
    }

    .tool-item {
      flex-direction: column;
      gap: 1rem;
      padding: 1.5rem 0;
    }

    .tool-content {
      padding-right: 0;
    }

    .tool-meta {
      width: 100%;
    }

    .tool-title {
      font-size: 1.15rem;
    }

    .tool-description {
      font-size: 0.95rem;
    }
  }

  /* Dark mode enhancements */
  html.dark .tool-item {
    border-color: rgba(255, 255, 255, 0.1);
  }

  html.dark .tool-item:hover {
    background: rgba(255, 255, 255, 0.02);
  }
</style>