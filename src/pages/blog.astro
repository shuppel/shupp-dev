---
import { getCollection } from 'astro:content';
import Layout from '../layouts/Layout.astro';
import Icon from '../components/Icon/Icon.astro';

// Get all blog posts
const allPosts = await getCollection('blog');

// Sort posts by date (newest first)
const posts = allPosts.sort((a, b) => {
  return new Date(b.data.pubDate).getTime() - new Date(a.data.pubDate).getTime();
});


---

<Layout title="Blog" description="Articles and insights on product management, software development, UX design, and more">
  <div class="blog-page">
    <section class="blog-hero">
      <div class="blog-header">
        <Icon name="Article" size={48} weight="duotone" liquid={true} inkEffect="medium" />
        <h1>Blog</h1>
      </div>
      <p class="lead">Thoughts on product management, software development, and technology</p>
    </section>

    <div class="blog-container">
      <!-- Left sidebar index -->
      <aside class="blog-index">
        <div class="index-sticky">
          <h3 class="index-title">
            <Icon name="ListBullets" size={20} weight="duotone" />
            <span>Quick Navigation</span>
          </h3>
          


          <nav class="index-list">
            <div class="index-group">
              <h4 class="index-group-title">Recent Posts</h4>
              {posts.slice(0, 10).map(post => (
                <a href={`#${post.slug}`} class="index-item" data-slug={post.slug}>
                  <span class="index-date">
                    {new Date(post.data.pubDate).toLocaleDateString('en-US', { 
                      month: 'short',
                      day: 'numeric'
                    })}
                  </span>
                  <span class="index-title">{post.data.title}</span>
                </a>
              ))}
            </div>
            
            {posts.length > 10 && (
              <button id="show-all-posts" class="show-more-btn">
                <Icon name="CaretDown" size={16} />
                Show all {posts.length} posts
              </button>
            )}
            
            <div id="all-posts" class="index-group hidden">
              <h4 class="index-group-title">All Posts</h4>
              {posts.slice(10).map(post => (
                <a href={`#${post.slug}`} class="index-item" data-slug={post.slug}>
                  <span class="index-date">
                    {new Date(post.data.pubDate).toLocaleDateString('en-US', { 
                      month: 'short',
                      day: 'numeric',
                      year: '2-digit'
                    })}
                  </span>
                  <span class="index-title">{post.data.title}</span>
                </a>
              ))}
            </div>
          </nav>


        </div>
      </aside>

      <!-- Main blog content -->
      <section class="blog-main">
        <div class="blog-list">
          {posts.map(post => (
            <article class="blog-item" id={post.slug}>
              <a href={`/blog/${post.slug}`} class="blog-link">
                <div class="blog-content">
                  <div class="blog-meta">
                    <span class="blog-date">
                      <Icon name="CalendarBlank" size={14} />
                      {new Date(post.data.pubDate).toLocaleDateString('en-US', {
                        year: 'numeric',
                        month: 'long',
                        day: 'numeric'
                      })}
                    </span>
                    {post.data.readTime && (
                      <span class="blog-read-time">
                        <Icon name="Clock" size={14} />
                        {post.data.readTime}
                      </span>
                    )}
                  </div>
                  <h2 class="blog-title">{post.data.title}</h2>
                  <p class="blog-description">{post.data.description}</p>

                </div>
              </a>
            </article>
          ))}
        </div>
      </section>
    </div>
  </div>

  <script>
    document.addEventListener('DOMContentLoaded', () => {
      // Show all posts toggle
      const showAllBtn = document.getElementById('show-all-posts');
      const allPostsSection = document.getElementById('all-posts');
      
      if (showAllBtn && allPostsSection) {
        showAllBtn.addEventListener('click', () => {
          allPostsSection.classList.toggle('hidden');
          const icon = showAllBtn.querySelector('svg');
          if (icon) {
            icon.style.transform = allPostsSection.classList.contains('hidden') ? 'rotate(0deg)' : 'rotate(180deg)';
          }
          showAllBtn.innerHTML = allPostsSection.classList.contains('hidden') 
            ? showAllBtn.innerHTML.replace('Hide', 'Show all')
            : showAllBtn.innerHTML.replace('Show all', 'Hide');
        });
      }





      // Smooth scroll to blog post when clicking index item
      indexItems.forEach(item => {
        item.addEventListener('click', (e) => {
          e.preventDefault();
          const slug = (item as HTMLElement).dataset.slug;
          const target = document.getElementById(slug || '');
          if (target) {
            target.scrollIntoView({ behavior: 'smooth', block: 'center' });
            // Highlight the post briefly
            target.style.background = 'var(--primary-color)10';
            setTimeout(() => {
              target.style.background = '';
            }, 2000);
          }
        });
      });
    });
  </script>
</Layout>

<style>
  .blog-page {
    max-width: 1400px;
    margin: 0 auto;
    padding: 4rem 1.5rem;
  }

  /* Hero Section */
  .blog-hero {
    margin-bottom: 3rem;
    text-align: center;
  }

  .blog-header {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 1rem;
  }

  .blog-hero h1 {
    font-size: 2.5rem;
    font-weight: 700;
    color: var(--text-color);
    margin: 0;
  }

  .lead {
    font-size: 1.25rem;
    color: var(--text-light);
    line-height: 1.6;
  }

  /* Container Layout */
  .blog-container {
    display: grid;
    grid-template-columns: 280px 1fr;
    gap: 3rem;
    align-items: flex-start;
  }

  /* Blog Index Sidebar */
  .blog-index {
    position: sticky;
    top: 5rem;
    max-height: calc(100vh - 6rem);
    overflow-y: auto;
  }

  .index-sticky {
    background: var(--card-bg, white);
    border-radius: 12px;
    padding: 1.5rem;
    box-shadow: var(--card-shadow);
  }

  html.dark .index-sticky {
    background: #23232b;
  }

  .index-title {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 1.1rem;
    font-weight: 600;
    margin-bottom: 1rem;
    color: var(--text-color);
  }





  .index-group {
    margin-bottom: 1.5rem;
  }

  .index-group.hidden {
    display: none;
  }

  .index-group-title {
    font-size: 0.9rem;
    font-weight: 600;
    color: var(--text-color);
    margin-bottom: 0.75rem;
    display: flex;
    align-items: center;
    gap: 0.5rem;
  }

  .index-item {
    display: flex;
    align-items: flex-start;
    gap: 0.75rem;
    padding: 0.5rem;
    margin: 0 -0.5rem;
    border-radius: 6px;
    text-decoration: none;
    color: var(--text-color);
    font-size: 0.85rem;
    transition: all 0.2s ease;
    cursor: pointer;
  }

  .index-item:hover {
    background: var(--primary-color)10;
    transform: translateX(4px);
  }

  .index-date {
    flex-shrink: 0;
    font-size: 0.75rem;
    color: var(--text-light);
    font-variant-numeric: tabular-nums;
  }

  .index-title {
    line-height: 1.4;
  }

  .show-more-btn {
    width: 100%;
    padding: 0.5rem;
    background: transparent;
    border: 1px dashed var(--border-color);
    border-radius: 6px;
    color: var(--text-light);
    font-size: 0.85rem;
    cursor: pointer;
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 0.5rem;
    transition: all 0.2s ease;
    margin-bottom: 1rem;
  }

  .show-more-btn:hover {
    background: var(--background-alt);
    border-style: solid;
  }

  .show-more-btn svg {
    transition: transform 0.3s ease;
  }



  /* Blog Main Content */
  .blog-main {
    min-width: 0;
  }

  .blog-list {
    display: flex;
    flex-direction: column;
    gap: 0;
  }

  .blog-item {
    border-bottom: 1px solid var(--border-color);
    transition: all 0.3s ease;
  }

  .blog-item:last-child {
    border-bottom: none;
  }

  .blog-link {
    display: block;
    text-decoration: none;
    color: inherit;
    padding: 2.5rem 0;
    transition: opacity 0.2s ease;
  }

  .blog-link:hover {
    opacity: 0.8;
  }

  .blog-link:hover .blog-title {
    color: var(--primary-color);
  }

  .blog-content {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .blog-meta {
    display: flex;
    align-items: center;
    gap: 1.5rem;
    font-size: 0.9rem;
    color: var(--text-light);
  }

  .blog-meta span {
    display: flex;
    align-items: center;
    gap: 0.4rem;
  }

  .blog-title {
    font-size: 1.5rem;
    font-weight: 600;
    line-height: 1.3;
    color: var(--text-color);
    transition: color 0.2s ease;
    margin: 0.25rem 0;
  }

  .blog-description {
    color: var(--text-light);
    line-height: 1.6;
    font-size: 1.05rem;
    margin: 0;
  }



  /* Responsive */
  @media (max-width: 1024px) {
    .blog-container {
      grid-template-columns: 1fr;
    }

    .blog-index {
      position: static;
      margin-bottom: 2rem;
      max-height: none;
    }

    .index-sticky {
      max-width: 100%;
    }
  }

  @media (max-width: 768px) {
    .blog-page {
      padding: 3rem 1rem;
    }

    .blog-header {
      flex-direction: column;
    }

    .blog-hero h1 {
      font-size: 2rem;
    }

    .lead {
      font-size: 1.1rem;
    }

    .blog-link {
      padding: 2rem 0;
    }

    .blog-title {
      font-size: 1.3rem;
    }

    .blog-description {
      font-size: 1rem;
    }
  }

  /* Dark mode enhancements */
  html.dark .blog-item {
    border-color: rgba(255, 255, 255, 0.1);
  }

  html.dark .blog-link:hover {
    background: rgba(255, 255, 255, 0.02);
  }


</style>