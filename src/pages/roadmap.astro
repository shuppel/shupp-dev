---
import Layout from '../layouts/Layout.astro';
import { getCollection } from 'astro:content';
import Icon from '../components/Icon/Icon.astro';
import RoadmapTimeline from '../components/RoadmapTimeline/RoadmapTimeline.astro';

// Get all roadmap items and principles
const roadmapItems = await getCollection('roadmap');
const principles = await getCollection('principles');
const phaseItems = await getCollection('roadmap', entry => entry.id.startsWith('phase-'));

// Sort roadmap items by order
const sortedRoadmapItems = roadmapItems
  .filter(item => !item.id.startsWith('phase-'))
  .sort((a, b) => a.data.order - b.data.order);

// Sort phases by order
const sortedPhases = phaseItems.sort((a, b) => a.data.order - b.data.order);

// Sort principles by order
const sortedPrinciples = principles.sort((a, b) => a.data.order - b.data.order);

// Current progress percentage for timeline
const completedCMSItems = roadmapItems
  .filter(item => item.slug === 'content-management-system')[0]?.data.completedItems.length || 0;

// Calculate progress percentage for the CMS phase
const cmsInitialProgress = 0;
const cmsMaxProgress = 14; // Represents 14% when CMS is complete
let progressPercentage = cmsInitialProgress;

if (completedCMSItems > 0) {
  // There are 5 total CMS items to complete (4 initial + 1 new completed item)
  const cmsExpectedTotal = 5;
  progressPercentage = cmsInitialProgress +
    (cmsMaxProgress - cmsInitialProgress) * (completedCMSItems / cmsExpectedTotal);
}

// Prepare combined timeline data for 3D visualization
const timelineData = sortedPhases.map((phase, phaseIndex) => {
  // Get items that belong to this phase
  const phaseRoadmapItems = sortedRoadmapItems.filter(item => {
    // Match items to phases based on timing/status
    if (phaseIndex === 0) return item.data.status === 'now';
    if (phaseIndex === 1) return item.data.status === 'next';
    return item.data.status === 'later' || item.data.status === 'exploring';
  });

  return {
    id: phase.id,
    title: phase.data.title.split(':').length > 1 ? phase.data.title.split(':')[1].trim() : phase.data.title,
    fullTitle: phase.data.title,
    timeframe: phase.data.timeframe || 'TBD',
    description: phase.data.description,
    status: phase.data.status === 'now' ? 'current' : 
           phase.data.status === 'completed' ? 'completed' : 'upcoming',
    order: phase.data.order,
    progress: phaseIndex === 0 ? completedCMSItems * 20 : 0,
    goals: phase.data.goals || [],
    items: phaseRoadmapItems.map(item => ({
      id: item.id,
      title: item.data.title,
      description: item.data.description,
      status: item.data.status,
      features: item.data.features || [],
      completedItems: item.data.completedItems || []
    }))
  };
});
---

<Layout title="Development Roadmap" description="My future plans and development roadmap">
  <div class="roadmap-page">
    <!-- Hero Section -->
    <section class="roadmap-hero">
      <div class="roadmap-header">
        <Icon name="MapTrifold" size={48} weight="duotone" liquid={true} inkEffect="medium" />
        <h1>Development Roadmap</h1>
      </div>
      <p class="lead">Exploring the future of web experiences through innovative development phases</p>
    </section>

    <!-- 3D Timeline - Now the main feature -->
    <section class="roadmap-timeline-section">
      <div class="timeline-container">
        <RoadmapTimeline 
          phases={timelineData}
          currentProgress={progressPercentage}
        />
      </div>
      
      <!-- Timeline Legend -->
      <div class="timeline-legend">
        <div class="legend-item">
          <span class="legend-dot completed"></span>
          <span>Completed</span>
        </div>
        <div class="legend-item">
          <span class="legend-dot current"></span>
          <span>In Progress</span>
        </div>
        <div class="legend-item">
          <span class="legend-dot upcoming"></span>
          <span>Upcoming</span>
        </div>
      </div>
    </section>

    <!-- Vision & Principles -->
    <section class="roadmap-vision">
      <h2>Guiding Principles</h2>
      <p class="vision-text">My development roadmap is guided by a philosophy of creating engaging, user-centric experiences that push the boundaries of web technology.</p>
      
      <div class="roadmap-principles">
        {sortedPrinciples.map(principle => (
          <div class="principle-card">
            <div class="principle-icon">
              <Icon name="Sparkle" size={32} weight="duotone" />
            </div>
            <h3>{principle.data.title}</h3>
            <p>{principle.data.description}</p>
          </div>
        ))}
      </div>
    </section>

    <!-- CTA Section -->
    <section class="roadmap-cta">
      <div class="cta-card">
        <h2>Let's Build Together</h2>
        <p>I'm always open to interesting collaboration opportunities that align with my roadmap. If you have a project that fits with my vision, let's discuss how we might work together.</p>
        <div class="cta-buttons">
          <a href="mailto:erikk@shupp.dev" class="btn btn-primary">
            <Icon name="Envelope" size={20} weight="duotone" />
            Email Me
          </a>
          <a href="https://github.com/shuppel" target="_blank" rel="noopener noreferrer" class="btn btn-secondary">
            <Icon name="GithubLogo" size={20} weight="duotone" />
            GitHub
          </a>
          <a href="https://www.linkedin.com/in/shupp-erikk" target="_blank" rel="noopener noreferrer" class="btn btn-secondary">
            <Icon name="LinkedinLogo" size={20} weight="duotone" />
            LinkedIn
          </a>
        </div>
      </div>
    </section>
  </div>
</Layout>

<style>
  /* Page Layout */
  .roadmap-page {
    max-width: 1400px;
    margin: 0 auto;
    padding: 2rem;
  }

  /* Hero Section */
  .roadmap-hero {
    text-align: center;
    margin-bottom: 4rem;
  }

  .roadmap-header {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: 1rem;
    margin-bottom: 1rem;
  }

  .roadmap-hero h1 {
    font-size: 3rem;
    font-weight: 700;
    background: linear-gradient(135deg, var(--color-tertiary), var(--color-accent));
    -webkit-background-clip: text;
    -webkit-text-fill-color: transparent;
    background-clip: text;
    margin: 0;
  }

  .lead {
    font-size: 1.25rem;
    color: var(--text-light);
    line-height: 1.6;
    max-width: 600px;
    margin: 0 auto;
  }

  /* Timeline Section */
  .roadmap-timeline-section {
    margin: 4rem 0 6rem;
    position: relative;
  }

  .timeline-container {
    width: 100%;
    margin: 0 auto;
    border-radius: 20px;
    overflow: hidden;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
    background: linear-gradient(135deg, 
      rgba(121, 148, 150, 0.02) 0%, 
      rgba(172, 193, 150, 0.02) 100%);
  }

  html.dark .timeline-container {
    background: linear-gradient(135deg, 
      rgba(44, 44, 56, 0.3) 0%, 
      rgba(30, 32, 40, 0.3) 100%);
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.3);
  }

  /* Timeline Legend */
  .timeline-legend {
    display: flex;
    justify-content: center;
    gap: 2rem;
    margin-top: 2rem;
    padding: 1rem;
    background: rgba(255, 255, 255, 0.8);
    backdrop-filter: blur(10px);
    border-radius: 12px;
    width: fit-content;
    margin-left: auto;
    margin-right: auto;
  }

  html.dark .timeline-legend {
    background: rgba(30, 32, 40, 0.8);
  }

  .legend-item {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 0.9rem;
    color: var(--text-light);
  }

  .legend-dot {
    width: 12px;
    height: 12px;
    border-radius: 50%;
    display: inline-block;
  }

  .legend-dot.completed {
    background: linear-gradient(135deg, #5ea3a3, #7bb8b8);
  }

  .legend-dot.current {
    background: linear-gradient(135deg, #7994aa, #acb5dd);
    box-shadow: 0 0 10px rgba(172, 181, 221, 0.5);
  }

  .legend-dot.upcoming {
    background: linear-gradient(135deg, #c5c5d2, #e0e0e8);
  }

  /* Vision Section */
  .roadmap-vision {
    margin: 6rem 0;
    text-align: center;
  }

  .roadmap-vision h2 {
    font-size: 2.5rem;
    margin-bottom: 1.5rem;
    position: relative;
    display: inline-block;
  }

  .roadmap-vision h2::after {
    content: "";
    position: absolute;
    bottom: -10px;
    left: 50%;
    transform: translateX(-50%);
    width: 60px;
    height: 3px;
    background: linear-gradient(to right, var(--color-tertiary), var(--color-accent));
    border-radius: 3px;
  }

  .vision-text {
    max-width: 700px;
    margin: 0 auto 3rem;
    color: var(--text-light);
    font-size: 1.1rem;
    line-height: 1.7;
  }

  /* Principles Grid */
  .roadmap-principles {
    display: grid;
    grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
    gap: 2rem;
    margin-top: 3rem;
  }

  .principle-card {
    background: white;
    border-radius: 16px;
    padding: 2rem;
    text-align: center;
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
    transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
    position: relative;
    overflow: hidden;
  }

  html.dark .principle-card {
    background: rgba(30, 32, 40, 0.6);
    backdrop-filter: blur(10px);
    box-shadow: 0 10px 30px rgba(0, 0, 0, 0.2);
  }

  .principle-card::before {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    height: 4px;
    background: linear-gradient(to right, var(--color-tertiary), var(--color-accent));
    opacity: 0;
    transition: opacity 0.3s ease;
  }

  .principle-card:hover::before {
    opacity: 1;
  }

  .principle-card:hover {
    transform: translateY(-5px);
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.1);
  }

  html.dark .principle-card:hover {
    box-shadow: 0 15px 40px rgba(0, 0, 0, 0.3);
  }

  .principle-icon {
    width: 60px;
    height: 60px;
    margin: 0 auto 1rem;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, var(--color-tertiary), var(--color-accent));
    border-radius: 50%;
    color: white;
  }

  .principle-card h3 {
    margin-bottom: 0.8rem;
    color: var(--color-dark);
    font-size: 1.3rem;
  }

  html.dark .principle-card h3 {
    color: #f3f4f6;
  }

  .principle-card p {
    color: var(--text-light);
    line-height: 1.6;
    margin: 0;
  }

  html.dark .principle-card p {
    color: #c5c5d2;
  }

  /* CTA Section */
  .roadmap-cta {
    margin: 6rem 0 2rem;
  }

  .cta-card {
    background: linear-gradient(135deg, var(--color-tertiary), var(--color-accent));
    color: white;
    text-align: center;
    padding: 4rem 2rem;
    border-radius: 24px;
    position: relative;
    overflow: hidden;
  }

  .cta-card::before {
    content: '';
    position: absolute;
    top: -50%;
    right: -50%;
    width: 200%;
    height: 200%;
    background: radial-gradient(circle, rgba(255, 255, 255, 0.1) 0%, transparent 70%);
    animation: rotate 20s linear infinite;
  }

  @keyframes rotate {
    from { transform: rotate(0deg); }
    to { transform: rotate(360deg); }
  }

  .cta-card h2 {
    margin-bottom: 1.5rem;
    font-size: 2.5rem;
    position: relative;
    z-index: 1;
  }

  .cta-card p {
    max-width: 600px;
    margin: 0 auto 2.5rem;
    font-size: 1.1rem;
    line-height: 1.7;
    position: relative;
    z-index: 1;
    opacity: 0.95;
  }

  .cta-buttons {
    display: flex;
    justify-content: center;
    gap: 1rem;
    flex-wrap: wrap;
    position: relative;
    z-index: 1;
  }

  .btn {
    display: inline-flex;
    align-items: center;
    gap: 0.5rem;
    padding: 0.75rem 1.5rem;
    border-radius: 50px;
    text-decoration: none;
    font-weight: 600;
    transition: all 0.3s ease;
  }

  .btn-primary {
    background: white;
    color: var(--color-tertiary);
  }

  .btn-primary:hover {
    transform: translateY(-2px);
    box-shadow: 0 10px 20px rgba(0, 0, 0, 0.2);
  }

  .btn-secondary {
    background: rgba(255, 255, 255, 0.2);
    color: white;
    backdrop-filter: blur(10px);
  }

  .btn-secondary:hover {
    background: rgba(255, 255, 255, 0.3);
    transform: translateY(-2px);
  }

  /* Responsive Design */
  @media (max-width: 768px) {
    .roadmap-hero h1 {
      font-size: 2rem;
    }

    .lead {
      font-size: 1.1rem;
    }

    .roadmap-vision h2 {
      font-size: 2rem;
    }

    .roadmap-principles {
      grid-template-columns: 1fr;
      gap: 1.5rem;
    }

    .cta-card {
      padding: 3rem 1.5rem;
    }

    .cta-card h2 {
      font-size: 2rem;
    }

    .cta-buttons {
      flex-direction: column;
      width: 100%;
      max-width: 300px;
      margin: 0 auto;
    }

    .btn {
      width: 100%;
      justify-content: center;
    }

    .timeline-legend {
      flex-wrap: wrap;
      gap: 1rem;
    }
  }
</style>